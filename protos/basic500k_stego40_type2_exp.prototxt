name: "type2_exp"
layer {
  name: "suniward04"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  data_param {
    source: "../datasets/basic50k_cover_stego40_train"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "suniward04"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  data_param {
    source: "../data_preparation/target_lmdbfile"
    batch_size: 2
    backend: LMDB
  }
}

layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 25
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "dctr"
    }
    bias_term: false
  }
}

#clone
layer {
      name: "outputDctr"
      type: "DctrQT"
      bottom: "conv1"
      top: "dctr1"
      dctrqt_param {
      threshold: 4
      quantization_step: 1.0}
}

layer {
  name: "conv2"
  type: "Convolution"
  bottom: "dctr1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    pad: 2
    kernel_size: 5
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_term: false
  }
}
layer {
  name: "abs2"
  type: "AbsVal"
  bottom: "conv2"
  top: "abs2"
}
layer {
  name: "bn2"
  type: "BatchNorm"
  bottom: "abs2"
  top: "abs2"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.05
  }
}
layer {
  name: "scale2"
  type: "Scale"
  bottom: "abs2"
  top: "abs2"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "abs2"
  top: "abs2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "abs2"
  top: "pool2"
  pooling_param {
    pool: AVE
    kernel_size: 5
    stride: 4
    engine: CAFFE
  }
}

layer {
  name: "conv4"
  type: "Convolution"
  bottom: "pool2"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    pad: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_term: false
  }
}
layer {
  name: "bn4"
  type: "BatchNorm"
  bottom: "conv4"
  top: "conv4"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.05
  }
}
layer {
  name: "scale4"
  type: "Scale"
  bottom: "conv4"
  top: "conv4"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4"
  top: "pool4"
  pooling_param {
    pool: AVE
    kernel_size: 5
    stride: 4
    engine: CAFFE
  }
}

layer {
  name: "conv6"
  type: "Convolution"
  bottom: "pool4"
  top: "conv6"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 3
    pad:1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_term: false
  }
}
layer {
  name: "bn6"
  type: "BatchNorm"
  bottom: "conv6"
  top: "conv6"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.05
  }
}
layer {
  name: "scale6"
  type: "Scale"
  bottom: "conv6"
  top: "conv6"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "conv6"
  top: "conv6"
}
layer {
  name: "pool6"
  type: "Pooling"
  bottom: "conv6"
  top: "pool6"
  pooling_param {
    pool: AVE
    kernel_size: 5
    stride: 4
  }
}
#clone############################################
#clone_0
layer {
      name: "outputDctr_0"
      type: "DctrQT"
      bottom: "conv1"
      top: "dctr1_0"
      dctrqt_param {
      threshold: 4
      quantization_step: 2.0}
}

layer {
  name: "conv2_0"
  type: "Convolution"
  bottom: "dctr1_0"
  top: "conv2_0"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    pad: 2
    kernel_size: 5
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_term: false
  }
}
layer {
  name: "abs2_0"
  type: "AbsVal"
  bottom: "conv2_0"
  top: "abs2_0"
}
layer {
  name: "bn2_0"
  type: "BatchNorm"
  bottom: "abs2_0"
  top: "abs2_0"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.05
  }
}
layer {
  name: "scale2_0"
  type: "Scale"
  bottom: "abs2_0"
  top: "abs2_0"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu2_0"
  type: "ReLU"
  bottom: "abs2_0"
  top: "abs2_0"
}
layer {
  name: "pool2_0"
  type: "Pooling"
  bottom: "abs2_0"
  top: "pool2_0"
  pooling_param {
    pool: AVE
    kernel_size: 5
    stride: 4
    engine: CAFFE
  }
}

layer {
  name: "conv4_0"
  type: "Convolution"
  bottom: "pool2_0"
  top: "conv4_0"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    pad: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_term: false
  }
}
layer {
  name: "bn4_0"
  type: "BatchNorm"
  bottom: "conv4_0"
  top: "conv4_0"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.05
  }
}
layer {
  name: "scale4_0"
  type: "Scale"
  bottom: "conv4_0"
  top: "conv4_0"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu4_0"
  type: "ReLU"
  bottom: "conv4_0"
  top: "conv4_0"
}
layer {
  name: "pool4_0"
  type: "Pooling"
  bottom: "conv4_0"
  top: "pool4_0"
  pooling_param {
    pool: AVE
    kernel_size: 5
    stride: 4
    engine: CAFFE
  }
}

layer {
  name: "conv6_0"
  type: "Convolution"
  bottom: "pool4_0"
  top: "conv6_0"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 3
    pad: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_term: false
  }
}
layer {
  name: "bn6_0"
  type: "BatchNorm"
  bottom: "conv6_0"
  top: "conv6_0"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.05
  }
}
layer {
  name: "scale6_0"
  type: "Scale"
  bottom: "conv6_0"
  top: "conv6_0"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu6_0"
  type: "ReLU"
  bottom: "conv6_0"
  top: "conv6_0"
}
layer {
  name: "pool6_0"
  type: "Pooling"
  bottom: "conv6_0"
  top: "pool6_0"
  pooling_param {
    pool: AVE
    kernel_size: 5
    stride: 4
  }
}

#clone_1
layer {
      name: "outputDctr_1"
      type: "DctrQT"
      bottom: "conv1"
      top: "dctr1_1"
      dctrqt_param {
      threshold: 4
      quantization_step: 4.0}
}

layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "dctr1_1"
  top: "conv2_1"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    pad: 2
    kernel_size: 5
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_term: false
  }
}
layer {
  name: "abs2_1"
  type: "AbsVal"
  bottom: "conv2_1"
  top: "abs2_1"
}
layer {
  name: "bn2_1"
  type: "BatchNorm"
  bottom: "abs2_1"
  top: "abs2_1"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.05
  }
}
layer {
  name: "scale2_1"
  type: "Scale"
  bottom: "abs2_1"
  top: "abs2_1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "abs2_1"
  top: "abs2_1"
}
layer {
  name: "pool2_1"
  type: "Pooling"
  bottom: "abs2_1"
  top: "pool2_1"
  pooling_param {
    pool: AVE
    kernel_size: 5
    stride: 4
    engine: CAFFE
  }
}

layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool2_1"
  top: "conv4_1"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    pad: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_term: false
  }
}
layer {
  name: "bn4_1"
  type: "BatchNorm"
  bottom: "conv4_1"
  top: "conv4_1"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.05
  }
}
layer {
  name: "scale4_1"
  type: "Scale"
  bottom: "conv4_1"
  top: "conv4_1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "pool4_1"
  type: "Pooling"
  bottom: "conv4_1"
  top: "pool4_1"
  pooling_param {
    pool: AVE
    kernel_size: 5
    stride: 4
    engine: CAFFE
  }
}

layer {
  name: "conv6_1"
  type: "Convolution"
  bottom: "pool4_1"
  top: "conv6_1"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 3
    pad: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_term: false
  }
}
layer {
  name: "bn6_1"
  type: "BatchNorm"
  bottom: "conv6_1"
  top: "conv6_1"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.05
  }
}
layer {
  name: "scale6_1"
  type: "Scale"
  bottom: "conv6_1"
  top: "conv6_1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "relu6_1"
  type: "ReLU"
  bottom: "conv6_1"
  top: "conv6_1"
}
layer {
  name: "pool6_1"
  type: "Pooling"
  bottom: "conv6_1"
  top: "pool6_1"
  pooling_param {
    pool: AVE
    kernel_size: 5
    stride: 4
  }
}
#clone_end##########################

#concatanate layer##################
layer {
  name: "concatOut"
  type: "Concat"
  bottom: "pool6"
  bottom: "pool6_0"
  bottom: "pool6_1"
  top: "concatOut"
  concat_param {
    axis: 1
  }
}
#concatanate end####################

layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "concatOut"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 800
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "reluip1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}

layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 400
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "reluip2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}


layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 200
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "reluip3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}

layer {
  name: "ip4"
  type: "InnerProduct"
  bottom: "ip3"
  top: "ip4"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip4"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip4"
  bottom: "label"
  top: "loss"
}
